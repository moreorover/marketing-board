/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ListingsIndexRouteImport } from './routes/listings/index'
import { Route as ListingsNewRouteImport } from './routes/listings/new'
import { Route as ListingsListingIdIndexRouteImport } from './routes/listings/$listingId/index'
import { Route as ListingsListingIdEditRouteImport } from './routes/listings/$listingId/edit'

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ListingsIndexRoute = ListingsIndexRouteImport.update({
  id: '/listings/',
  path: '/listings/',
  getParentRoute: () => rootRouteImport,
} as any)
const ListingsNewRoute = ListingsNewRouteImport.update({
  id: '/listings/new',
  path: '/listings/new',
  getParentRoute: () => rootRouteImport,
} as any)
const ListingsListingIdIndexRoute = ListingsListingIdIndexRouteImport.update({
  id: '/listings/$listingId/',
  path: '/listings/$listingId/',
  getParentRoute: () => rootRouteImport,
} as any)
const ListingsListingIdEditRoute = ListingsListingIdEditRouteImport.update({
  id: '/listings/$listingId/edit',
  path: '/listings/$listingId/edit',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/listings/new': typeof ListingsNewRoute
  '/listings': typeof ListingsIndexRoute
  '/listings/$listingId/edit': typeof ListingsListingIdEditRoute
  '/listings/$listingId': typeof ListingsListingIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/listings/new': typeof ListingsNewRoute
  '/listings': typeof ListingsIndexRoute
  '/listings/$listingId/edit': typeof ListingsListingIdEditRoute
  '/listings/$listingId': typeof ListingsListingIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/listings/new': typeof ListingsNewRoute
  '/listings/': typeof ListingsIndexRoute
  '/listings/$listingId/edit': typeof ListingsListingIdEditRoute
  '/listings/$listingId/': typeof ListingsListingIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/profile'
    | '/listings/new'
    | '/listings'
    | '/listings/$listingId/edit'
    | '/listings/$listingId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/profile'
    | '/listings/new'
    | '/listings'
    | '/listings/$listingId/edit'
    | '/listings/$listingId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/profile'
    | '/listings/new'
    | '/listings/'
    | '/listings/$listingId/edit'
    | '/listings/$listingId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  ListingsNewRoute: typeof ListingsNewRoute
  ListingsIndexRoute: typeof ListingsIndexRoute
  ListingsListingIdEditRoute: typeof ListingsListingIdEditRoute
  ListingsListingIdIndexRoute: typeof ListingsListingIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/listings/': {
      id: '/listings/'
      path: '/listings'
      fullPath: '/listings'
      preLoaderRoute: typeof ListingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/listings/new': {
      id: '/listings/new'
      path: '/listings/new'
      fullPath: '/listings/new'
      preLoaderRoute: typeof ListingsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/listings/$listingId/': {
      id: '/listings/$listingId/'
      path: '/listings/$listingId'
      fullPath: '/listings/$listingId'
      preLoaderRoute: typeof ListingsListingIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/listings/$listingId/edit': {
      id: '/listings/$listingId/edit'
      path: '/listings/$listingId/edit'
      fullPath: '/listings/$listingId/edit'
      preLoaderRoute: typeof ListingsListingIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  ListingsNewRoute: ListingsNewRoute,
  ListingsIndexRoute: ListingsIndexRoute,
  ListingsListingIdEditRoute: ListingsListingIdEditRoute,
  ListingsListingIdIndexRoute: ListingsListingIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
