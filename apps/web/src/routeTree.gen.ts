/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ListingsListingIdRouteImport } from './routes/listings.$listingId'
import { Route as AuthenticatedProfileRouteImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedListingsIndexRouteImport } from './routes/_authenticated/listings/index'
import { Route as AuthenticatedListingsNewRouteImport } from './routes/_authenticated/listings/new'
import { Route as AuthenticatedListingsListingIdEditRouteImport } from './routes/_authenticated/listings/$listingId.edit'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ListingsListingIdRoute = ListingsListingIdRouteImport.update({
  id: '/listings/$listingId',
  path: '/listings/$listingId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedProfileRoute = AuthenticatedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedListingsIndexRoute =
  AuthenticatedListingsIndexRouteImport.update({
    id: '/listings/',
    path: '/listings/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedListingsNewRoute =
  AuthenticatedListingsNewRouteImport.update({
    id: '/listings/new',
    path: '/listings/new',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedListingsListingIdEditRoute =
  AuthenticatedListingsListingIdEditRouteImport.update({
    id: '/listings/$listingId/edit',
    path: '/listings/$listingId/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/listings/$listingId': typeof ListingsListingIdRoute
  '/listings/new': typeof AuthenticatedListingsNewRoute
  '/listings': typeof AuthenticatedListingsIndexRoute
  '/listings/$listingId/edit': typeof AuthenticatedListingsListingIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/listings/$listingId': typeof ListingsListingIdRoute
  '/listings/new': typeof AuthenticatedListingsNewRoute
  '/listings': typeof AuthenticatedListingsIndexRoute
  '/listings/$listingId/edit': typeof AuthenticatedListingsListingIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/listings/$listingId': typeof ListingsListingIdRoute
  '/_authenticated/listings/new': typeof AuthenticatedListingsNewRoute
  '/_authenticated/listings/': typeof AuthenticatedListingsIndexRoute
  '/_authenticated/listings/$listingId/edit': typeof AuthenticatedListingsListingIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/dashboard'
    | '/profile'
    | '/listings/$listingId'
    | '/listings/new'
    | '/listings'
    | '/listings/$listingId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/dashboard'
    | '/profile'
    | '/listings/$listingId'
    | '/listings/new'
    | '/listings'
    | '/listings/$listingId/edit'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/dashboard'
    | '/_authenticated/profile'
    | '/listings/$listingId'
    | '/_authenticated/listings/new'
    | '/_authenticated/listings/'
    | '/_authenticated/listings/$listingId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  ListingsListingIdRoute: typeof ListingsListingIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/listings/$listingId': {
      id: '/listings/$listingId'
      path: '/listings/$listingId'
      fullPath: '/listings/$listingId'
      preLoaderRoute: typeof ListingsListingIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/listings/': {
      id: '/_authenticated/listings/'
      path: '/listings'
      fullPath: '/listings'
      preLoaderRoute: typeof AuthenticatedListingsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/listings/new': {
      id: '/_authenticated/listings/new'
      path: '/listings/new'
      fullPath: '/listings/new'
      preLoaderRoute: typeof AuthenticatedListingsNewRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/listings/$listingId/edit': {
      id: '/_authenticated/listings/$listingId/edit'
      path: '/listings/$listingId/edit'
      fullPath: '/listings/$listingId/edit'
      preLoaderRoute: typeof AuthenticatedListingsListingIdEditRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedListingsNewRoute: typeof AuthenticatedListingsNewRoute
  AuthenticatedListingsIndexRoute: typeof AuthenticatedListingsIndexRoute
  AuthenticatedListingsListingIdEditRoute: typeof AuthenticatedListingsListingIdEditRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedListingsNewRoute: AuthenticatedListingsNewRoute,
  AuthenticatedListingsIndexRoute: AuthenticatedListingsIndexRoute,
  AuthenticatedListingsListingIdEditRoute:
    AuthenticatedListingsListingIdEditRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  ListingsListingIdRoute: ListingsListingIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
